name: CI/CD Pipeline for .NET Console App - ConsoleApp1

on:
  push:
    branches:
      - main
    paths:
      - "con1/ConsoleApp1/**" # Change the directory here

permissions:
  contents: write # Required for creating releases

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            runtime: win-x64
          - os: ubuntu-latest
            runtime: linux-x64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"

      - name: Cache .NET dependencies
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore con1/ConsoleApp1/ConsoleApp1.csproj

      - name: Build
        run: dotnet build con1/ConsoleApp1/ConsoleApp1.csproj --configuration Release --no-restore

      - name: Test
        run: dotnet test con1/ConsoleApp1/ConsoleApp1.csproj --no-build --verbosity normal --logger "trx;LogFileName=TestResults/test-results.trx"

      - name: Publish Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: TestResults/
        if: always()

      - name: Publish Single File Executable
        run: dotnet publish con1/ConsoleApp1/ConsoleApp1.csproj --configuration Release -r ${{ matrix.runtime }} --self-contained -o ./publish /p:PublishSingleFile=true /p:PublishTrimmed=true /p:TrimMode=link

      - name: List Publish Directory (Debugging)
        run: |
          echo "Contents of ./publish:"
          ls -R ./publish  # For Linux
          # dir ./publish /s  # For Windows (uncomment if needed)

      - name: Clean Up Unnecessary Files (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force ./publish/*.pdb
          Remove-Item -Recurse -Force ./publish/*.xml

      - name: Clean Up Unnecessary Files (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          find ./publish -name "*.pdb" -delete
          find ./publish -name "*.xml" -delete

      - name: Compress Artifacts (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Compress-Archive -Path ./publish/* -DestinationPath con1-windows.zip

      - name: Compress Artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          tar -czvf con1-linux.tar.gz -C ./publish .

      - name: Clean Up (Optional)
        shell: pwsh
        run: |
          if ("${{ matrix.os }}" -eq "windows-latest") {
            Remove-Item -Recurse -Force ./publish
          } else {
            rm -rf ./publish
          }

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: con1-${{ matrix.os }}
          path: |
            con1-windows.zip
            con1-linux.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Debug Artifacts
        run: |
          echo "Contents of ./artifacts:"
          ls -R ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: con1-v${{ github.run_number }}
          name: con1 Release v${{ github.run_number }}
          draft: false
          prerelease: false
          files: |
            ./artifacts/con1-windows-latest/con1-windows.zip
            ./artifacts/con1-ubuntu-latest/con1-linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
